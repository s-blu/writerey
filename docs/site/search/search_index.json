{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome Welcome to the writerey documentation! Choose a topic on the right sidebar to learn more. Writer-what? You don't know what writerey is? Head over to our homepage to find out more about the app. Attention Attention: Still in Beta Please be aware that writerey is still in active development and did not hit v1.0 yet. Some things are broken, some are incomplete, some are simply not available yet. To find out what to expect in future, head over to our Roadmap .","title":"Welcome"},{"location":"#welcome","text":"Welcome to the writerey documentation! Choose a topic on the right sidebar to learn more.","title":"Welcome"},{"location":"#writer-what","text":"You don't know what writerey is? Head over to our homepage to find out more about the app.","title":"Writer-what?"},{"location":"#attention-attention-still-in-beta","text":"Please be aware that writerey is still in active development and did not hit v1.0 yet. Some things are broken, some are incomplete, some are simply not available yet. To find out what to expect in future, head over to our Roadmap .","title":"Attention Attention: Still in Beta"},{"location":"en/development/","text":"Development This section explains how you can get involved in the development of writerey and set up a local development environment. Just want to use the app? Go to the installation guide to learn how to set it up for end users. Set up a development environment Please note that you need Python 3 and Node.js (>= 12) installed on your machine. Clone the repository and navigate into the repository via CLI Install JS dependencies with npm i Install pipenv with pip install pipenv Install python dependencies with pipenv install Open a terminal and start the server with npm run flask Open another terminal and start the ui with ng serve (if that is not working, use npm run ng serve ) Ready! Visit localhost:4200 to open up the app Git features as part of the app Please be aware that some features currently don't work like expected in development environment. Since the project itself is managed by git, the sub folder is ignored to not commit test data, which leads to some conflicts when trying to commit as part of the application. To have a real test environment, please build the app as executeable. Nonfunctioning are currently (list is maybe incomplete): Deletion Snapshotting Tagging Build a executable for your environment writerey is build with electron-forge . To build a executable for your target system, do the following: Clone the repository and navigate into the repository via CLI Install JS dependencies with npm i Trigger building and packaging with npm run build-make If you want to build the application for a non-windows platform, please refer to the electron-forge documentation to configure a appropiate maker. Build documentation This very documentation is build via MkDocs . Getting it running locally only requires a few steps. Make sure you have python dependencies installed cd docs/ mkdocs build For developing the documentation, run cd docs/ && mkdocs serve to start a hot reload server.","title":"Development"},{"location":"en/development/#development","text":"This section explains how you can get involved in the development of writerey and set up a local development environment. Just want to use the app? Go to the installation guide to learn how to set it up for end users.","title":"Development"},{"location":"en/development/#set-up-a-development-environment","text":"Please note that you need Python 3 and Node.js (>= 12) installed on your machine. Clone the repository and navigate into the repository via CLI Install JS dependencies with npm i Install pipenv with pip install pipenv Install python dependencies with pipenv install Open a terminal and start the server with npm run flask Open another terminal and start the ui with ng serve (if that is not working, use npm run ng serve ) Ready! Visit localhost:4200 to open up the app","title":"Set up a development environment"},{"location":"en/development/#git-features-as-part-of-the-app","text":"Please be aware that some features currently don't work like expected in development environment. Since the project itself is managed by git, the sub folder is ignored to not commit test data, which leads to some conflicts when trying to commit as part of the application. To have a real test environment, please build the app as executeable. Nonfunctioning are currently (list is maybe incomplete): Deletion Snapshotting Tagging","title":"Git features as part of the app"},{"location":"en/development/#build-a-executable-for-your-environment","text":"writerey is build with electron-forge . To build a executable for your target system, do the following: Clone the repository and navigate into the repository via CLI Install JS dependencies with npm i Trigger building and packaging with npm run build-make If you want to build the application for a non-windows platform, please refer to the electron-forge documentation to configure a appropiate maker.","title":"Build a executable for your environment"},{"location":"en/development/#build-documentation","text":"This very documentation is build via MkDocs . Getting it running locally only requires a few steps. Make sure you have python dependencies installed cd docs/ mkdocs build For developing the documentation, run cd docs/ && mkdocs serve to start a hot reload server.","title":"Build documentation"},{"location":"en/guide/","text":"User Guide Projects, Folders and Documents All your writing ideas begin with a project. To create one, hit the blue button on the sidebar and give it a fancy name. Inside a project you can create folders and documents, the hearth of your writing projects. Hit the \"More\" Menu on the side bar and create them at your liking. To create a folder/document inside another folder, use the menu on the folder. You'll notice that you can also create a \"Label\". We will come to that later. When creating a document, the editor in the middle will become all yours. Editor, Autosave and Snapshots Every time you type something into the editor, it will autosave for you (after a short pause). Do you wonder where your precious ideas go? Don't worry: Right on your disk space, always accessable for you, even without the app. All documents are saved as .html files under <installation path of writerey>/_writerey_data/<project-name>/ to make sure you can always access your work, no matter the circumstances. Writerey uses CKEditor 5. Most of the handling works just like in any other writing application. If you have doubts or question, the official CKEditor website is probably a good place to look. On top of that, all 30 minutes - and each time you hit the \"Snapshot\" Button at the upper right - writerey records a snapshot of all your files and all your projects. It remembers how your files looked like at this moment and saves it. This will enable you to have a look to a previous state of a document whenever you need to. Please note: The history function is not implemented yet, but writerey snapshots your files nevertheless. To access these snapshots, you currently need a thirdparty tool to visualize git - for example Github Desktop Client. Please see \"troubleshooting and known bugs\". Read, Write, Review Right below the editor, you have three modes available. Let's have a look on them. Read The Read mode gets all the clunky, distracting stuff out of the way and puts your document into a readonly state. This way, you can check (or simply enjoy) your work without distraction. Tip : To achieve the same for the other modes, hit the distraction free mode button (eye) on the lower left corner. Write You will probably stay in Write Mode most of the time. It lets you edit your document and shows you all the context informations you need to craft your next masterpiece (or homework). Review Did you wonder about the context information I mentioned just now? The review mode is where you add them. Here, you can review your document and add two kinds of information: labels and notes. These information will then show up on Write mode to help you improve your document. Labels Lets discuss Labels first. Labels are here to help you categorize parts of your document. Does this paragraph belong to chapter 1,2 or 14? Is this paragraph a first draft, the second one or already final? Which scene it belongs to? Which story line? Who's the Point of View character? You can create labels by clicking the menu on the sidebar. Label values The label itself is only like a folder for files. To really use them, you need to add values to them. A value consists of two properties: A name and a info (or description). The name is the real value and what you will choose when assigning labels (see below). The info on the other hand will show up as a special kind of note, so this is the right place to add all the important bits that concern this label value. Assigning labels After you have created a label and its value, you can assign them. Go back to your document Switch to review mode Click on a paragraph On the left side, you'll now have your created labels displayed. Choose the values you want to assign to this paragraph. When you now switch back to Write mode and your cursor is inside this paragraph, your labels will show up and - if available - you'll see your label info on the right side. Adding a label value in review mode: Seeing a label value in write mode: There is more to labels. Notes The second type of context information are notes. Just like sticky notes. You can add them on review mode either on the whole document, or your selected paragraph - or on your labels. If you add a note to a paragraph, it will only show up on this paragraph. If you have notes that you want on multiple places but not on the complete document, labels are what you're looking for. By putting notes on label values, they'll show up on each paragraph that belongs to this label value. You're having a ton of background information to that church scene 37 takes place? Label value 37 of label Scenes is your friend. How to create notes for the document or a paragraph Go to your document Switch to Review mode If you want the note on a paragraph, click on that paragraph and make sure the context of the \"New Note\" form is set to \"Paragraph\" Type in whatever you want to note down. Note Type and Colors are two ways to make a note stand out - just try it out. Both are of solely visual effect. Hit the Plus-Button to add your note. How to create notes for a label value Here you have two possibilites. First, you can create a note for a label value if this label value is assigned to your selected paragraph. Then it works like above, you just need to choose a different context. The second possibility to do so is on the label screen itself. Go to the label screen (Switch the tree on the right with the tab and click on your label) Switch to Review mode Choose your wanted label value as context and write down your note Rename, Move and Delete Documents You can rename, move and delete documents by clicking the three dots at the end of their tree entry when hovering them. WIP","title":"User Guide"},{"location":"en/guide/#user-guide","text":"","title":"User Guide"},{"location":"en/guide/#projects-folders-and-documents","text":"All your writing ideas begin with a project. To create one, hit the blue button on the sidebar and give it a fancy name. Inside a project you can create folders and documents, the hearth of your writing projects. Hit the \"More\" Menu on the side bar and create them at your liking. To create a folder/document inside another folder, use the menu on the folder. You'll notice that you can also create a \"Label\". We will come to that later. When creating a document, the editor in the middle will become all yours.","title":"Projects, Folders and Documents"},{"location":"en/guide/#editor-autosave-and-snapshots","text":"Every time you type something into the editor, it will autosave for you (after a short pause). Do you wonder where your precious ideas go? Don't worry: Right on your disk space, always accessable for you, even without the app. All documents are saved as .html files under <installation path of writerey>/_writerey_data/<project-name>/ to make sure you can always access your work, no matter the circumstances. Writerey uses CKEditor 5. Most of the handling works just like in any other writing application. If you have doubts or question, the official CKEditor website is probably a good place to look. On top of that, all 30 minutes - and each time you hit the \"Snapshot\" Button at the upper right - writerey records a snapshot of all your files and all your projects. It remembers how your files looked like at this moment and saves it. This will enable you to have a look to a previous state of a document whenever you need to. Please note: The history function is not implemented yet, but writerey snapshots your files nevertheless. To access these snapshots, you currently need a thirdparty tool to visualize git - for example Github Desktop Client. Please see \"troubleshooting and known bugs\".","title":"Editor, Autosave and Snapshots"},{"location":"en/guide/#read-write-review","text":"Right below the editor, you have three modes available. Let's have a look on them.","title":"Read, Write, Review"},{"location":"en/guide/#read","text":"The Read mode gets all the clunky, distracting stuff out of the way and puts your document into a readonly state. This way, you can check (or simply enjoy) your work without distraction. Tip : To achieve the same for the other modes, hit the distraction free mode button (eye) on the lower left corner.","title":"Read"},{"location":"en/guide/#write","text":"You will probably stay in Write Mode most of the time. It lets you edit your document and shows you all the context informations you need to craft your next masterpiece (or homework).","title":"Write"},{"location":"en/guide/#review","text":"Did you wonder about the context information I mentioned just now? The review mode is where you add them. Here, you can review your document and add two kinds of information: labels and notes. These information will then show up on Write mode to help you improve your document.","title":"Review"},{"location":"en/guide/#labels","text":"Lets discuss Labels first. Labels are here to help you categorize parts of your document. Does this paragraph belong to chapter 1,2 or 14? Is this paragraph a first draft, the second one or already final? Which scene it belongs to? Which story line? Who's the Point of View character? You can create labels by clicking the menu on the sidebar.","title":"Labels"},{"location":"en/guide/#label-values","text":"The label itself is only like a folder for files. To really use them, you need to add values to them. A value consists of two properties: A name and a info (or description). The name is the real value and what you will choose when assigning labels (see below). The info on the other hand will show up as a special kind of note, so this is the right place to add all the important bits that concern this label value.","title":"Label values"},{"location":"en/guide/#assigning-labels","text":"After you have created a label and its value, you can assign them. Go back to your document Switch to review mode Click on a paragraph On the left side, you'll now have your created labels displayed. Choose the values you want to assign to this paragraph. When you now switch back to Write mode and your cursor is inside this paragraph, your labels will show up and - if available - you'll see your label info on the right side. Adding a label value in review mode: Seeing a label value in write mode: There is more to labels.","title":"Assigning labels"},{"location":"en/guide/#notes","text":"The second type of context information are notes. Just like sticky notes. You can add them on review mode either on the whole document, or your selected paragraph - or on your labels. If you add a note to a paragraph, it will only show up on this paragraph. If you have notes that you want on multiple places but not on the complete document, labels are what you're looking for. By putting notes on label values, they'll show up on each paragraph that belongs to this label value. You're having a ton of background information to that church scene 37 takes place? Label value 37 of label Scenes is your friend.","title":"Notes"},{"location":"en/guide/#how-to-create-notes-for-the-document-or-a-paragraph","text":"Go to your document Switch to Review mode If you want the note on a paragraph, click on that paragraph and make sure the context of the \"New Note\" form is set to \"Paragraph\" Type in whatever you want to note down. Note Type and Colors are two ways to make a note stand out - just try it out. Both are of solely visual effect. Hit the Plus-Button to add your note.","title":"How to create notes for the document or a paragraph"},{"location":"en/guide/#how-to-create-notes-for-a-label-value","text":"Here you have two possibilites. First, you can create a note for a label value if this label value is assigned to your selected paragraph. Then it works like above, you just need to choose a different context. The second possibility to do so is on the label screen itself. Go to the label screen (Switch the tree on the right with the tab and click on your label) Switch to Review mode Choose your wanted label value as context and write down your note","title":"How to create notes for a label value"},{"location":"en/guide/#rename-move-and-delete-documents","text":"You can rename, move and delete documents by clicking the three dots at the end of their tree entry when hovering them. WIP","title":"Rename, Move and Delete Documents"},{"location":"en/installation/","text":"Installation Currently, writerey is tested for Windows 8 and 10. Use on other Windows versions could work but are untested. If you want to use it for another OS, please refer to the development guide to build a fitting executable. To use writerey, you need following third party software installed: Python 3 Git What is Python? Why do I need it? Python is a popular programming language, just like Java. Do you remember installing and updating Java environments all the time? Python is already part of Linux and iOS, so you can use it there without installing it separately. On Windows machines, you need to teach Windows to understand it first. You need it to use writerey because writerey's backend is written in Python. Windows won't be able to run the app without understanding Python. Do you want to learn more? Visit the official website or its wikipedia page . How do I install Python? Get it here: https://www.python.org/downloads/ Run the installer Check \u201cadd Python 3.8 to Path\u201d Click on Customize installation Uncheck all but pip and py launcher Choose installation path like you wish and hit Install Click Close to finish python installation What is Git? Why do I need it? Git is a VCS, a Version Control System. A VCS is one of the fundamentals of software development and Git is a fairly popular choice for a VCS (if not the choice). In short, it takes care that developers can jump back to a old version of their code base and that they can have a look what changed between two versions. Developing without a VCS is quite hard to imagine. In writerey, we use Git to do the exact same for your writing project: To make sure you can always jump back to an old version of your files or to check what you've changed. It archives your first draft, your second, your 23rd one for you so that you don't need to do that manually. Do you want to learn more? Visit the official website or its wikipedia page . How do I install Git? Installing Git can be a bit alienating, since there are a lot of options to choose from. Fear not though, most of the time you can just hit Next. Get it here https://git-scm.com/downloads Run the installer. Accept the GNU License Choose a installation path you want Uncheck \u201cWindows Explorer Integration\u201d, you won\u2019t need it. Leave the rest as is Check \u201cDon\u2019t create a Start Menu folder\u201d, you won\u2019t need it Hit Next until you can hit install Hit Install. And hit next \u2013 a last time! Install writerey If you installed Git or Python, please restart your computer first. Get it here https://github.com/s-blu/writerey/releases/latest - download the .zip under \"assets\" Unzip the zip in your preffered installation path. Please be aware that all the files you'll create in writerey will lay in the same path Double Click writerey.exe You're ready to go!","title":"Installation"},{"location":"en/installation/#installation","text":"Currently, writerey is tested for Windows 8 and 10. Use on other Windows versions could work but are untested. If you want to use it for another OS, please refer to the development guide to build a fitting executable. To use writerey, you need following third party software installed: Python 3 Git","title":"Installation"},{"location":"en/installation/#what-is-python-why-do-i-need-it","text":"Python is a popular programming language, just like Java. Do you remember installing and updating Java environments all the time? Python is already part of Linux and iOS, so you can use it there without installing it separately. On Windows machines, you need to teach Windows to understand it first. You need it to use writerey because writerey's backend is written in Python. Windows won't be able to run the app without understanding Python. Do you want to learn more? Visit the official website or its wikipedia page .","title":"What is Python? Why do I need it?"},{"location":"en/installation/#how-do-i-install-python","text":"Get it here: https://www.python.org/downloads/ Run the installer Check \u201cadd Python 3.8 to Path\u201d Click on Customize installation Uncheck all but pip and py launcher Choose installation path like you wish and hit Install Click Close to finish python installation","title":"How do I install Python?"},{"location":"en/installation/#what-is-git-why-do-i-need-it","text":"Git is a VCS, a Version Control System. A VCS is one of the fundamentals of software development and Git is a fairly popular choice for a VCS (if not the choice). In short, it takes care that developers can jump back to a old version of their code base and that they can have a look what changed between two versions. Developing without a VCS is quite hard to imagine. In writerey, we use Git to do the exact same for your writing project: To make sure you can always jump back to an old version of your files or to check what you've changed. It archives your first draft, your second, your 23rd one for you so that you don't need to do that manually. Do you want to learn more? Visit the official website or its wikipedia page .","title":"What is Git? Why do I need it?"},{"location":"en/installation/#how-do-i-install-git","text":"Installing Git can be a bit alienating, since there are a lot of options to choose from. Fear not though, most of the time you can just hit Next. Get it here https://git-scm.com/downloads Run the installer. Accept the GNU License Choose a installation path you want Uncheck \u201cWindows Explorer Integration\u201d, you won\u2019t need it. Leave the rest as is Check \u201cDon\u2019t create a Start Menu folder\u201d, you won\u2019t need it Hit Next until you can hit install Hit Install. And hit next \u2013 a last time!","title":"How do I install Git?"},{"location":"en/installation/#install-writerey","text":"If you installed Git or Python, please restart your computer first. Get it here https://github.com/s-blu/writerey/releases/latest - download the .zip under \"assets\" Unzip the zip in your preffered installation path. Please be aware that all the files you'll create in writerey will lay in the same path Double Click writerey.exe You're ready to go!","title":"Install writerey"},{"location":"en/roadmap/","text":"Roadmap writerey is still in active development and has way to go until it hits v1.0. Here, we want to give you a overview what you can expect in future. This is of course subject to change. It is furthermore not possible to give a time frame since writerey is a hobby project that needs to share the little, available free time with other cool stuff. You can have a up-to-date, more detailled and more technical look on the roadmap here . version 0.9 Version 0.9 focuses on reducing technical debt as well as bug fixing, so there are no big features planned here. version 0.10 0.10 will introduce the Template Feature . With that, you'll be able to define template documents and projects that you can select when creating a new document or project. This will come handy for repeating things like character sheets. Alongside that, we plan to further improve usability and UI. version 0.11 0.11 will introduce several improvements on the note system . The note system is one of the core features of writerey and we want it to be better useable, more intuitive, and more feature rich. version 0.12 0.12 will introduce the history to view and access your snapshots in-app. version 1.0 Until version 1.0 we plan to add the following features: A automated remote backup of your files on a configurable place Interactive user guide explaining the application Export documents to different formats like Word","title":"Roadmap"},{"location":"en/roadmap/#roadmap","text":"writerey is still in active development and has way to go until it hits v1.0. Here, we want to give you a overview what you can expect in future. This is of course subject to change. It is furthermore not possible to give a time frame since writerey is a hobby project that needs to share the little, available free time with other cool stuff. You can have a up-to-date, more detailled and more technical look on the roadmap here .","title":"Roadmap"},{"location":"en/roadmap/#version-09","text":"Version 0.9 focuses on reducing technical debt as well as bug fixing, so there are no big features planned here.","title":"version 0.9"},{"location":"en/roadmap/#version-010","text":"0.10 will introduce the Template Feature . With that, you'll be able to define template documents and projects that you can select when creating a new document or project. This will come handy for repeating things like character sheets. Alongside that, we plan to further improve usability and UI.","title":"version 0.10"},{"location":"en/roadmap/#version-011","text":"0.11 will introduce several improvements on the note system . The note system is one of the core features of writerey and we want it to be better useable, more intuitive, and more feature rich.","title":"version 0.11"},{"location":"en/roadmap/#version-012","text":"0.12 will introduce the history to view and access your snapshots in-app.","title":"version 0.12"},{"location":"en/roadmap/#version-10","text":"Until version 1.0 we plan to add the following features: A automated remote backup of your files on a configurable place Interactive user guide explaining the application Export documents to different formats like Word","title":"version 1.0"},{"location":"en/troubleshooting/","text":"Troubleshooting and known Bugs How do I access my snapshots? Currently, the history functionality to give you access to your snapshots is not implemented yet. Have a look on the roadmap to find out when to expect its implementation. Still, there is a way to access your snapshots. Since all the snapshot handling is done by git, you can check your snapshots with every git UI client. We recommend using Github Desktop for this, since it is user friendly and fast to set up. To see your history in Github Desktop, please proceed like follows Get it here Run the installer When it asks you for a Github Account, click on \"Skip this step\" on the bottom On the next screen, hit \"Next\" without inputing anything Decide if you want to submit usage data and hit \"Finish\" Open up your file explorer and navigate to your writerey installation path Drag and Drop the folder containing writerey.exe onto Github Desktop A popup appears. Click \"Add Repository\" Github Desktop now opens up your repository. Click on the tab \"History\" to access your History. Done! Here, you can see all the changes writerey recorded for you and copy them into the original file again, if necessary. I have some kind of problem that is not listed here! Feel free to open up an issue on Github that details your problem.","title":"Troubleshooting and known Bugs"},{"location":"en/troubleshooting/#troubleshooting-and-known-bugs","text":"","title":"Troubleshooting and known Bugs"},{"location":"en/troubleshooting/#how-do-i-access-my-snapshots","text":"Currently, the history functionality to give you access to your snapshots is not implemented yet. Have a look on the roadmap to find out when to expect its implementation. Still, there is a way to access your snapshots. Since all the snapshot handling is done by git, you can check your snapshots with every git UI client. We recommend using Github Desktop for this, since it is user friendly and fast to set up. To see your history in Github Desktop, please proceed like follows Get it here Run the installer When it asks you for a Github Account, click on \"Skip this step\" on the bottom On the next screen, hit \"Next\" without inputing anything Decide if you want to submit usage data and hit \"Finish\" Open up your file explorer and navigate to your writerey installation path Drag and Drop the folder containing writerey.exe onto Github Desktop A popup appears. Click \"Add Repository\" Github Desktop now opens up your repository. Click on the tab \"History\" to access your History. Done! Here, you can see all the changes writerey recorded for you and copy them into the original file again, if necessary.","title":"How do I access my snapshots?"},{"location":"en/troubleshooting/#i-have-some-kind-of-problem-that-is-not-listed-here","text":"Feel free to open up an issue on Github that details your problem.","title":"I have some kind of problem that is not listed here!"}]}